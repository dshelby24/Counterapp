{"version":3,"sources":["components/Add.js","components/Subtract.js","components/Input.js","components/Reset.js","App.js","reportWebVitals.js","index.js"],"names":["Add","props","countUp","onClick","Subtract","countDown","Input","state","count","handleChange","e","setState","target","value","handleSubmit","preventDefault","inputNum","onSubmit","this","type","onChange","Component","Reset","reset","App","number","parseInt","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAYeA,EAVH,SAACC,GACX,IAAOC,EAAWD,EAAXC,QAEP,OACE,8BACE,wBAAQC,QAAWD,EAAnB,wBCKSE,EAVE,SAACH,GAChB,IAAOI,EAAaJ,EAAbI,UAEP,OACE,8BACE,wBAAQF,QAAWE,EAAnB,6BCwBSC,E,4MA5BXC,MAAQ,CACJC,MAAO,I,EAGXC,aAAe,SAACC,GACZ,EAAKC,SAAS,CACVH,MAAOE,EAAEE,OAAOC,S,EAIxBC,aAAe,SAACJ,GACZA,EAAEK,iBACF,EAAKd,MAAMe,SAAS,EAAKT,MAAMC,OAC/B,EAAKG,SAAS,CACVH,MAAO,M,4CAIf,WACI,OACI,uBAAMS,SAAUC,KAAKJ,aAArB,UACI,uBAAOK,KAAK,OAAOC,SAAUF,KAAKT,aAAcI,MAAOK,KAAKX,MAAMC,QAClE,kD,GAvBIa,aCULC,EAVD,SAACrB,GACX,IAAQsB,EAAUtB,EAAVsB,MAER,OACI,8BACI,wBAAQpB,QAAWoB,EAAnB,sBCoDGC,E,4MAlDbjB,MAAQ,CACNC,MAAO,G,EAGXN,QAAU,WACR,EAAKS,SACH,CAACH,MAAO,EAAKD,MAAMC,MAAQ,K,EAI/BH,UAAY,WACV,EAAKM,SACH,CAACH,MAAO,EAAKD,MAAMC,MAAQ,K,EAI/BQ,SAAW,SAACS,GACV,IAAIZ,EAAQa,SAASD,GACrB,EAAKd,SACH,CAACH,MAAO,EAAKD,MAAMC,MAAQK,K,EAI/BU,MAAQ,WACN,EAAKZ,SAAS,CACZH,MAAO,K,4CAIX,WACE,OACE,sBAAKmB,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,UACE,4CACA,6BAAKT,KAAKX,MAAMC,WAElB,sBAAKmB,UAAU,gBAAf,UACE,cAAC,EAAD,CAAKzB,QAASgB,KAAKhB,UACnB,cAAC,EAAD,CAAUG,UAAWa,KAAKb,eAE5B,sBAAKsB,UAAU,kBAAf,UACE,cAAC,EAAD,CAAOX,SAAUE,KAAKF,WACtB,cAAC,EAAD,CAAOO,MAAOL,KAAKK,kB,GA3CTF,aCIHO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7bca8efa.chunk.js","sourcesContent":["import React from 'react'\n\nconst Add = (props) => {\n  const {countUp} = props\n\n  return (\n    <div>\n      <button onClick = {countUp}>Add One</button>\n    </div>\n  )\n}\n\nexport default Add","import React from 'react'\n\nconst Subtract = (props) => {\n  const {countDown} = props\n\n  return (\n    <div>\n      <button onClick = {countDown}>Subtract One</button>\n    </div>\n  )\n}\n\nexport default Subtract","import React, {Component} from 'react'\n\nclass Input extends Component {\n    state = {\n        count: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            count: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.inputNum(this.state.count)\n        this.setState({\n            count: ''\n        })\n    }\n\n    render(){\n        return(\n            <form onSubmit={this.handleSubmit}>\n                <input type=\"text\" onChange={this.handleChange} value={this.state.count} />\n                <button>Input</button>\n            </form>\n        )\n    }\n}\n\nexport default Input","import React from 'react'\n\nconst Reset = (props) => {\n    const { reset } = props\n\n    return (\n        <div>\n            <button onClick = {reset}>Reset</button>\n        </div>\n    )\n}\n\nexport default Reset","import React, { Component } from 'react'\nimport Add from './components/Add'\nimport Subtract from './components/Subtract'\nimport Input from './components/Input'\nimport Reset from './components/Reset'\n\n\n\nclass App extends Component {\n  state = {\n    count: 0\n  }\n\ncountUp = () => {\n  this.setState(\n    {count: this.state.count + 1}\n  )\n}\n\ncountDown = () => {\n  this.setState(\n    {count: this.state.count - 1}\n  )\n}\n\ninputNum = (number) =>{\n  let value = parseInt(number)\n  this.setState(\n    {count: this.state.count + value}\n  )\n}\n\nreset = () => {\n  this.setState({\n    count: 0\n  })\n}\n\nrender() {\n  return(\n    <div className=\"App\">\n      <div className=\"container\">\n        <p>Lets Count!</p>\n        <h4>{this.state.count}</h4>\n      </div>\n      <div className=\"container-two\">\n        <Add countUp={this.countUp} />\n        <Subtract countDown={this.countDown} />\n      </div>\n      <div className=\"container-three\">\n        <Input inputNum={this.inputNum} />\n        <Reset reset={this.reset} />\n      </div>\n    </div>\n  )\n}\n\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}